KML File upload and import
==========================

Setup workspace
---------------
    
    >>> self.setRoles(('Manager', 'Contributor'))
    >>> folder = self.folder
    >>> from Products.CMFCore.utils import getToolByName
    >>> types = getToolByName(self.portal, 'portal_types')
    >>> 'Workspace' in types.objectIds()
    True
    >>> wsid = folder.invokeFactory('Workspace', id='test-ws', title='Testing')
    >>> ws = folder[wsid]
    >>> from zope.event import notify
    >>> from Products.Archetypes.event import ObjectInitializedEvent
    >>> notify(ObjectInitializedEvent(ws))
    >>> 'places' in ws.objectIds()
    True
    >>> 'features' in ws.objectIds()
    True
    >>> ws_url = ws.absolute_url()

Config the test browser
-----------------------
    
    >>> from Products.Five.testbrowser import Browser
    >>> browser = Browser()
    >>> portal_url = self.portal.absolute_url()
    
    >>> browser.handleErrors = False
    >>> self.portal.error_log._ignored_exceptions = ()
    >>> from zope.component import getUtility, getMultiAdapter
    >>> from plone.portlets.interfaces import IPortletManager
    >>> from plone.portlets.interfaces import IPortletAssignmentMapping
    >>> left_column = getUtility(IPortletManager, name=u"plone.leftcolumn")
    >>> left_assignable = getMultiAdapter((self.portal, left_column), IPortletAssignmentMapping)
    >>> for name in left_assignable.keys():
    ...     del left_assignable[name]
    
    >>> right_column = getUtility(IPortletManager, name=u"plone.rightcolumn")
    >>> right_assignable = getMultiAdapter((self.portal, right_column), IPortletAssignmentMapping)
    >>> for name in right_assignable.keys():
    ...     del right_assignable[name]
    
    >>> from Products.PloneTestCase.setup import portal_owner, default_password
    >>> browser.open(portal_url + '/login_form?came_from=' + portal_url)
    >>> browser.getControl(name='__ac_name').value = portal_owner
    >>> browser.getControl(name='__ac_password').value = default_password
    >>> browser.getControl(name='submit').click()

Adding a feature
----------------
    
    >>> browser.open('%s/add-content-form' % ws_url)
    >>> import os
    >>> browser.getControl(name='form.widgets.title').value = 'Foo'
    >>> browser.getControl(name='form.widgets.portal_type:list').value = ['Feature']
    >>> browser.getControl(name='form.buttons.apply').click()

Verify import
    
    >>> 'Foo' in [o.Title for o in ws['features'].queryCatalog()]
    True
    >>> len(list(ws['features'].queryCatalog()))
    1

Adding a place
--------------
    
    >>> browser.open('%s/add-content-form' % ws_url)
    >>> import os
    >>> browser.getControl(name='form.widgets.title').value = 'Foo'
    >>> browser.getControl(name='form.widgets.portal_type:list').value = ['Place']
    >>> browser.getControl(name='form.buttons.apply').click()

Verify import
    
    >>> 'Foo' in [o.Title for o in ws['places'].queryCatalog()]
    True
    >>> len(list(ws['places'].queryCatalog()))
    1
    
Adding a reference citation
---------------------------
    
    >>> browser.open('%s/add-content-form' % ws_url)
    >>> import os
    >>> browser.getControl(name='form.widgets.title').value = 'Foo'
    >>> browser.getControl(name='form.widgets.portal_type:list').value = ['SecondaryReference']
    >>> browser.getControl(name='form.buttons.apply').click()

Verify import

    >>> 'foo' in self.references.keys()
    True
    >>> 'Foo' in [o.Title for o in ws['citations'].queryCatalog()]
    True
    >>> len(list(ws['citations'].queryCatalog()))
    1    
    
    >>> browser.open('%s/add-content-form' % ws_url)
    >>> import os
    >>> browser.getControl(name='form.widgets.title').value = 'Bar'
    >>> browser.getControl(name='form.widgets.portal_type:list').value = ['PrimaryReference']
    >>> browser.getControl(name='form.buttons.apply').click()

Verify import

    >>> 'bar' in self.references.keys()
    True
    >>> 'Bar' in [o.Title for o in ws['citations'].queryCatalog()]
    True
    >>> len(list(ws['citations'].queryCatalog()))
    2
