Test creation of a workspace
============================

Setup

    >>> self.setRoles(('Manager', 'Contributor'))
    >>> folder = self.folder
    >>> features = self.portal['features']
    >>> places = self.portal['places']

Make a workspace

    >>> oid = self.folder.invokeFactory('Workspace Folder', id='workspaces', title='Workspaces')
    >>> spaces = self.folder[oid]
    >>> wsid = spaces.invokeFactory('Workspace', id='test-ws', title='Testing')
    >>> from zope.event import notify
    >>> from Products.Archetypes.event import ObjectInitializedEvent
    >>> notify(ObjectInitializedEvent(spaces[wsid]))
    >>> 'places' in spaces[wsid]
    True
    >>> 'features' in spaces[wsid]
    True
    
Create some test entities

    >>> pid = places.invokeFactory('Place', '0', title='Test')
    >>> fid = features.invokeFactory('Feature', '0', title='Test')
    >>> notify(ObjectInitializedEvent(places[pid]))
    >>> notify(ObjectInitializedEvent(features[fid]))
        
Attach a workspace to them

    >>> ws = spaces[wsid]
    >>> from pleiades.workspace.interfaces import IResource
    >>> ws.attach(features[fid])
    >>> ws.attach(places[pid])
    >>> wsuid = ws.UID()
    >>> IResource(features[fid]).wsuids == [wsuid]
    True
    >>> IResource(places[pid]).wsuids == [wsuid]
    True
    
See the content appear in the workspace collections

    >>> brains = ws.features.queryCatalog()
    >>> brains[0].id == fid
    True

Detach

    >>> ws.detach(features[fid])
    >>> ws.detach(places[pid])
    >>> IResource(features[fid]).wsuids == []
    True
    >>> IResource(places[pid]).wsuids == []
    True
    >>> list(ws.features.queryCatalog()) == []
    True
    >>> list(ws.places.queryCatalog()) == []
    True
